title = "Products & Services"
url = "/account/products-services"
layout = "main"
is_hidden = "0"

[editable]
==
<?php
use Illuminate\Http\Response;

function onStart(){
    $now = time();
    $user = $this->session->user()->attributes;
    $company_id = $user['ok_company_id'];
    $user_id = $user['id'];

    $this['pending_products'] = DB::table('operations.bp_suppliers_added')
                    ->where('user_id', $user_id)
                    ->where('company_uid', $company_id)
                    ->orderBy('created_stamp', 'desc')
                    ->get();
}

function verifyPost($post_name,$check="int"){

    if( !isset($_POST[$post_name]) ) App::abort(403, 'Forbidden');

    $post_val_raw = post($post_name);

    if($check=="int") $post_val_cast = (int) $post_val_raw;

    if($check=="float") $post_val_cast = (float) $post_val_raw;

    if($check=="string") $post_val_cast = (string) $post_val_raw;

    if( $post_val_raw <> $post_val_cast ) App::abort(403, 'Forbidden');

    return $post_val_cast;

}

function onProductPendingDelete(){
    $now = time();
    $uid = $this->verifyPost('uid',"int");
    $user = $this->session->user()->attributes;
    $company_id = $user['ok_company_id'];
    $user_id = $user['id'];

    // EXIT if there is no product
    $sql=   "SELECT * FROM operations.bp_suppliers_added ".
            "WHERE ".
            "uid = $uid AND ".
            "company_uid = $company_id AND ".
            "user_id = $user_id ".
            "LIMIT 1";
    $dbr = DB::select($sql);
    if( ! isset($dbr[0]) ){
        return ['status' => 'error','message' => 'Pending product could not be deleted! (err: NP)','log' => [  'err: NP' => $uid,],];
    }

    // EXIT if app in DEVELOPMENT
    if( env("APP_ENV") == "development" OR env("APP_ENV") <> "production" ){
//        return ['status' => 'success','message' => 'Product Deleted in Development mode!','log' => [  'DEV Deleted Product ID' => $uid,],];
    }

    DB::table('operations.bp_suppliers_added')->where('uid',$uid)->delete();

    return ['status' => 'success','message' => 'Pending product deleted!','log' => [  'Pending Product Deleted' => $uid,],];

}

function onProductDelete(){

    $now = time();
    $bp_id = $this->verifyPost('bp_id',"int");
    $user = $this->session->user()->attributes;
    $company_id = $user['ok_company_id'];
    $user_id = $user['id'];

    // EXIT if there is money riding on it by anyone
    $sql=   "SELECT count(*) as count ".
            "FROM operations.bp_sponsors ".
            "WHERE ".
            "bp_id = $bp_id AND ".
            "company_id = $company_id AND ".
            "UNIX_TIMESTAMP(start_stamp) < $now < UNIX_TIMESTAMP(end_stamp)";
    $dbr = DB::select($sql);
    if( $dbr[0]->count > 0 ){
        return ['status' => 'error','message' => 'Product could not be deleted! (err: CR)','log' => [  'err: CR' => $bp_id,],];
    }


    // EXIT if there is no product
    $sql=   "SELECT ".
            "uid, ".
            "trawling_rule_no, ".
            "company_website_url, ".
            "same_name_flag, ".
            "jump_flag, ".
            "sing, ".
            "prime_uid ".
            "FROM operations.bp_suppliers ".
            "WHERE ".
            "bp_uid = $bp_id AND ".
            "company_uid = $company_id ".
            "LIMIT 1";
    $dbr = DB::select($sql);
    if( ! isset($dbr[0]) ){
        return ['status' => 'error','message' => 'Product could not be deleted! (err: NP)','log' => [  'err: NP' => $bp_id,],];
    }

    // EXIT if app in DEVELOPMENT
    if( env("APP_ENV") == "development" OR env("APP_ENV") <> "production" ){
        return ['status' => 'success','message' => 'Product Deleted in Development mode!','log' => [  'DEV Deleted Product ID' => $bp_id,],];
    }

    DB::beginTransaction();

    $uid = $dbr[0]->uid;
    $trawling_rule_no = $dbr[0]->trawling_rule_no;
    $company_website_url = $dbr[0]->company_website_url;
    $same_name_flag = $dbr[0]->same_name_flag;
    $jump_flag = $dbr[0]->jump_flag;
    $sing = $dbr[0]->sing;
    $prime_uid = $dbr[0]->prime_uid;

    DB::table('operations.bp_suppliers_deleted')
        ->insert(array(
            'uid' => $dbr[0]->uid,
            'trawling_rule_no' => $dbr[0]->trawling_rule_no,
            'company_website_url' => $dbr[0]->company_website_url,
            'same_name_flag' => $dbr[0]->same_name_flag,
            'jump_flag' => $dbr[0]->jump_flag,
            'sing' => $dbr[0]->sing,
            'prime_uid' => $dbr[0]->prime_uid,
            'company_uid' => $company_id,
            'bp_uid' => $bp_id,
            'user_id' => $user_id,
        ));

    DB::table('operations.bp_suppliers')->where('uid',$dbr[0]->uid)->delete();
    $user['ok_company_products_count']=$user['ok_company_products_count']-1;
    DB::table('oktick.users')
       ->where('id', $user_id)
            ->update(array(
            'ok_company_products_count' => $user['ok_company_products_count'],
        ));

    DB::commit();

    return ['status' => 'success','message' => 'Product Deleted!','log' => [  'Deleted Product ID' => $bp_id,],];
}

function onProductAdd(){
    $now = time();
    $bp_name = $this->verifyPost('bp_name',"string");
    $user = $this->session->user()->attributes;
    $company_id = $user['ok_company_id'];
    $user_id = $user['id'];

    $bp_id = DB::table('operations.bps')->where('bp',$bp_name)->pluck('bp_uid');

    if( ! $bp_id) $bp_id = 0;

    // EXIT if app in DEVELOPMENT
/*
    if( env("APP_ENV") == "development" OR env("APP_ENV") <> "production" ){
        return [
            'status' => 'success',
            'message' => 'DEV: Product added but subject to verification by our research team!',
            'log' => [ 'DEVELOPMENT MODE'=>'','Product Name' => $bp_name,],
        ];
    }
*/
    try {

        DB::table('operations.bp_suppliers_added')
            ->insert(array(
                'bp_name' => $bp_name,
                'company_uid' => $company_id,
                'status' => 'Pending verification',
                'bp_uid' => $bp_id,
                'user_id' => $user_id,)
            );
    }
    catch(Exception $e) {
        \Debugbar::info("insert = ".$e->getMessage());
    return [
        'status' => 'error',
        'message' => $e->getMessage(),
        'log' => [ 'Product Name' => $bp_name, 'error'=>$e->getMessage(),],
    ];
    }

    return [
        'status' => 'success',
        'message' => 'Product added but subject to verification by our research team',
        'log' => [ 'Product Name' => $bp_name,],
    ];
}
?>
==
{% partial "head" %}
{% partial "nav-top"%}

<div class="container">

<h2 class="text-center">Products & Services Management<br>
<span class="text-center" style="font-size:14px;">(Click here <span id="ok_help_productservices_on" class="help glyphicon-primary glyphicon glyphicon-question-sign"></span> for help)</span>
</h2>

<div class="row">
    <div class="col-xs-1 col-md-0"></div>
    <div class="col-xs-10 col-md-12">
        <div id="ok_help_productservices" {% if user.ok_help_productservices==0 %}class="collapse"{% endif %} >
            <p>{{"&nbsp;&nbsp;&nbsp;"|raw}}</p>
                {% component 'editable' file="account-product-services-1.htm" %}
                {% if user.ok_purchase_number < 2 %}
                {% component 'editable' file="account-product-services-2.htm" %}
                {% endif %}
                {% component 'editable' file="account-product-services-3.htm" %}
            <div class="text-center">
                <button id="ok_help_productservices_off" class="btn btn-default btn-sm help"><span class="glyphicon glyphicon-primary glyphicon-thumbs-up"></span>&nbsp;Got it!</button>
                <br>
                <br>
            </div>
        </div>
    </div>
    <div class="col-xs-1 col-md-0"></div>
</div>
<br>
<br>
<div class="row">
    <div class="col-xs-1 col-md-0"></div>
    <div class="col-xs-10 col-md-12">
        <table class="table table-bordered">
            <tr class="">
                <th class="">Products & Services</th>
                <th class="text-center">Add/Delete</th>
            </tr>
            <tr>
                <td class="text-center">
                    <div class="input-group input-group-lg">
                    <label class="sr-only" for="autocomplete-ajax">Enter Keyword (e.g. Tools, Boots, etc)</label>
                    <input  class="form-control"
                            type="search"
                            name="q"
                            id="autocomplete-ajax" placeholder="Search..." value="{% if search and search != 404 %}{{ search }}{% endif %}" maxlength="100%" size="100%" onclick="$('#autocomplete-ajax').autocomplete().options.serviceUrl='account/add-products-services';
"/>
                </div>
                </td>
                <td class="text-center" style="vertical-align: middle;">
                    <button id="btn-add-products-services"
                            type="button"
                            class="btn btn-success btn-sm">
                        <span class="glyphicon glyphicon-ok"></span>
                    </button>
                </td>
            </tr>
            {% for product in products %}
                <tr class="{% if product.bp_user_credits %}success{%endif%}" id="row{{product.bp_id}}">
                    <td class=""
                        id="bp{{ product.bp_id }}"
                        data-bp_id="{{ product.bp_id }}"
                        data-bp_user_credits="{% if product.bp_user_credits %}{{product.bp_user_credits}}{%else%}0{%endif%}">
                        {{ product.bp_name }}
                    </td>

                    <td class="text-center">
                        {% if product.bp_user_credits %}
                        <button id="btn-na-products-services{{product.bp_id}}"
                                type="button"
                                class="btn btn-delete btn-default btn-sm"
                                data-toggle="tooltip"
                                data-trigger="hover"
                                data-placement="left"
                                title="Can't delete with credits">
                            <span class="glyphicon glyphicon-ban-circle"></span>
                        </button>
                        <!--button id="btn-na-products-services{{product.bp_id}}"
                                class="btn btn-default btn-lg"
                        type="button"
                            data-toggle="tooltip"
                            data-trigger="hover"
                            data-placement="left"
                            title="Can't delete with credits">
                            <span
                            class="glyphicon-primary glyphicon glyphicon-info-sign">
                            </span>
                        </button-->
                        {%else%}
                        <button id="go-button{{product.bp_id}}"
                                type="button"
                                class="btn btn-delete btn-danger btn-sm"
                                data-bp_id="{{product.bp_id}}">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                        {%endif%}

                    </td>
                </tr>
            {% endfor %}
        </table>
    </div>
    <div class="col-xs-1 col-md-0"></div>
</div>
{% if pending_products %}
<div class="row">
    <div class="col-xs-1 col-md-0"></div>
    <div class="col-xs-10 col-md-12">
        {% if products %}
        <table class="table table-bordered">
            <tr class="">
                <th class="text-center">Delete</th>
                <th class="">Products & Services pending approval</th>
                <th class="text-center">Status</th>
            </tr>
            {% for pending_product in pending_products %}
                <tr id="PendingRow{{pending_product.uid}}">
                    <td class="text-center">
                        <button id="pending-go-button{{pending_product.uid}}"
                                type="button"
                                class="btn btn-delete-pending btn-danger btn-sm"
                                data-uid="{{pending_product.uid}}">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                    </td>
                    <td class=""
                        id="pending-bp{{ pending_product.uid }}"
                        data-uid="{{ pending_product.uid }}">
                        {{ pending_product.bp_name }}
                    </td>
                    <td>
                        {{ pending_product.status }}
                    </td>
                </tr>
            {% endfor %}
        </table>
        {% endif %}
    </div>
    <div class="col-xs-1 col-md-0"></div>
</div>
{%endif%}

<!-- page specific javascript goes here-->
<script>
$('#btn-add-products-services').click(function(event){
    event.preventDefault();
    console.log("add-products-services");
    bp_name = $('#autocomplete-ajax').val();
    if ( ! bp_name ) return;
    BootstrapDialog.show({
        title: 'Confirmation',
        message: 'Do you confirm you are a supplier of <strong>'+bp_name+'</strong> and that this is expressly mentioned on your website?<br><br>Our engine will be scheduled to visit your website and confirm the exact url.<br><br>The result will then be manually reviewed by our research team and added to the list below.',
        type: BootstrapDialog.TYPE_PRIMARY,
        size: BootstrapDialog.SIZE_SMALL,
        buttons: [{
            label: 'Yes',
            //icon: 'glyphicon glyphicon-remove',
            cssClass: 'btn-primary',
            action: function(dialog) {
                $.request('onProductAdd', {
                    data: {
                        bp_name: bp_name,
                    }
                })
                .always(function( data, textStatus, errorThrown ) {
                    if(data.status=="error"){
                        console.log(data.log);
                        dialog.close();
                        return;
                    }
                    if(data.status=="success"){
                        console.log(data.log);
                        dialog.close();
                        location.reload(true);
                        return;
                    }
                    dialog.close();
                });
            }
        }, {
            label: 'No',
            action: function(dialog) {
                dialog.close();
            }
        }]
    });
});
$('.btn-delete').click(function(event){
    var types = [BootstrapDialog.TYPE_DEFAULT,
                     BootstrapDialog.TYPE_INFO,
                     BootstrapDialog.TYPE_PRIMARY,
                     BootstrapDialog.TYPE_SUCCESS,
                     BootstrapDialog.TYPE_WARNING,
                     BootstrapDialog.TYPE_DANGER];
    event.preventDefault();
    bp_id = $(this).attr('data-bp_id');
    var bp_name = $('#bp'+bp_id).text();
    BootstrapDialog.show({
        title: 'WARNING - Product Deletion!',
        message: 'Are you sure you want to permanently delete "'+bp_name.trim()+'"?',
        type: BootstrapDialog.TYPE_DANGER,
        size: BootstrapDialog.SIZE_SMALL,
        buttons: [{
            label: 'Yes',
            //icon: 'glyphicon glyphicon-remove',
            cssClass: 'btn-danger',
            action: function(dialog) {
                $.request('onProductDelete', {
                    data: {
                        bp_id: bp_id,
                    }
                })
                .always(function( data, textStatus, errorThrown ) {
                    if(data.status=="error"){
                        console.log(data.log);
                        dialog.close();
                        return;
                    }
                    if(data.status=="success"){
                        $('#row'+bp_id).hide();
                        var badge_total = $("#badge_total").html() - 1;
                        $("#badge_total").html(badge_total);
                        if(badge_total == 0) {
                            $( '#badge_total' ).removeClass('badge-primary');
                            $( '#badge_total' ).removeClass('badge-success');
                            $( '#badge_total' ).removeClass('badge-danger');
                            $( '#badge_total' ).removeClass('badge-warning');
                            $( '#badge_total' ).addClass('badge-default');
                        }
                        $("#badge_total").html(badge_total);
                        console.log(data.log);
                        dialog.close();
                        return;
                    }
                    dialog.close();
                });
            }
        }, {
            label: 'No',
            action: function(dialog) {
                dialog.close();
            }
        }]
    });
});
$('.btn-delete-pending').click(function(event){
    var types = [BootstrapDialog.TYPE_DEFAULT,
                     BootstrapDialog.TYPE_INFO,
                     BootstrapDialog.TYPE_PRIMARY,
                     BootstrapDialog.TYPE_SUCCESS,
                     BootstrapDialog.TYPE_WARNING,
                     BootstrapDialog.TYPE_DANGER];
    event.preventDefault();
    uid = $(this).attr('data-uid');
    var bp_name = $('#bp'+uid).text();
    $.request('onProductPendingDelete', {
        data: {
            uid: uid,
        }
    })
    .always(function( data, textStatus, errorThrown ) {
        if(data.status=="error"){
            console.log(data.log);
            return;
        }
        if(data.status=="success"){
            $('#PendingRow'+uid).hide();
            console.log(data.log);
            return;
        }
    });
});
</script>

</div><!--/container -->
{% partial "nav-bottom" %}
{% partial "foot" %}