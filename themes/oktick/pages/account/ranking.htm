title = "Ranking"
url = "/account/ranking"
layout = "account"
is_hidden = "0"
==
<?php
use Illuminate\Http\Response;

function onStart() {
//    \Debugbar::info("productservices page onStart()");
}
function verifyPost($post_name,$check="int"){
    if( !isset($_POST[$post_name]) ) App::abort(403, 'Forbidden');
    $post_val_raw = post($post_name);
    if($check=="int") $post_val_cast = (int) $post_val_raw;
    if($check=="float") $post_val_cast = (float) $post_val_raw;
    if($check=="string") $post_val_cast = (string) $post_val_raw;
    if( $post_val_raw <> $post_val_cast ) App::abort(403, 'Forbidden');
    return $post_val_cast;
}
function onGetEstimatedPosition(){
    $credits_estimated = $this->verifyPost('credits_estimated',"int");
    $bp_id = $this->verifyPost('bp_id',"int");

    $user = $this->session->user()->attributes;

    $company_id = $user['ok_company_id'];
    $user_id = $user['id'];

    $sql="SELECT bp_position FROM operations.bp_supplier_positions WHERE bp_id = $bp_id AND company_id = $company_id";
    $dbr = DB::select($sql);
    $bp_position = (isset($dbr[0])  ? $dbr[0]->bp_position : 0);
    
    $sql="SELECT applied_credit as bp_user_credits FROM operations.bp_sponsors WHERE ".
         "bp_id = $bp_id AND company_id = $company_id AND user_id = $user_id AND ".
         "start_stamp < now() AND now() < end_stamp";
    $dbr = DB::select($sql);
    $bp_user_credits = (isset($dbr[0])  ? $dbr[0]->bp_user_credits : 0);

    $position_new = ($bp_position - $bp_user_credits *10) + $credits_estimated * 10;

    try {
        $sql=   "SELECT count(*)+1 as bp_low FROM operations.bp_supplier_positions ".
                "WHERE ".
                "bp_id = $bp_id AND ".
                "bp_position   > $position_new AND ".
                "company_id <> $company_id";
        $dbr = DB::select($sql);
        $bp_low = (isset($dbr[0])  ? $dbr[0]->bp_low : 0);
//        return ['estimatedPosition' => "$bp_low:".__LINE__];

        $sql=   "SELECT count(*)+1 as bp_high  FROM operations.bp_supplier_positions ".
                "WHERE ".
                "bp_id = $bp_id AND ".
                "bp_position  >= $position_new AND ".
                "company_id <> $company_id";
        $dbr = DB::select($sql);
        $bp_high = (isset($dbr[0])  ? $dbr[0]->bp_high : 0);
        if ($bp_high > 50) return ['estimatedPosition' => "+50"];
        if ($bp_high > 25) return ['estimatedPosition' => "Top 50"];
        if ($bp_high > 20) return ['estimatedPosition' => "Top 25"];
        if ($bp_high > 15) return ['estimatedPosition' => "Top 20"];
        if ($bp_high > 10) return ['estimatedPosition' => "Top 15"];
        if ($bp_high >  5) return ['estimatedPosition' => "Top 10"];
        if ($bp_high >  3) return ['estimatedPosition' => "Top 5"];
        if ($bp_high >  0) return ['estimatedPosition' => "Top 3"];
        return ['estimatedPosition' => "-----------"];
        if($bp_low==$bp_high) return ['estimatedPosition' => $bp_low];
        return ['estimatedPosition' => "$bp_low to $bp_high"];
    }
    catch(Exception $e) {
        \Debugbar::addException($e);
        return ['error' => "Something went wrong"];
        return (new Response(['error' => "Something went wrong"], "500"))->header('Content-Type', "text/html; charset=UTF-8");
    }
    // value="{% if product.bp_low==product.bp_high %}{{product.bp_low}}{%else%}{{product.bp_low}} to {{ product.bp_high }}{%endif%}">
}


function onCreditConfirm(){
    $now = time();

    $credits_confirmed = $this->verifyPost('credits_confirmed',"int");
    $bp_id = $this->verifyPost('bp_id',"int");

    $user = $this->session->user()->attributes;

    $total_credits = $user['ok_credits'];
    $company_id = $user['ok_company_id'];
    $user_id = $user['id'];

    $sql=   "SELECT bp_position FROM operations.bp_supplier_positions ".
            "WHERE ".
            "bp_id = $bp_id AND ".
            "company_id = $company_id";
    $dbr = DB::select($sql);
    $bp_position = (isset($dbr[0])  ? $dbr[0]->bp_position : 0);
    $bp_user_credits = 0;
    $bp_was_active = false;
    $bp_is_active = false;

    DB::beginTransaction();
    $refund=false;
    $pre_refund_total_credits = $total_credits;
    $over_seconds = 0;
    $credits_confirmed_value = $credits_confirmed;
    $sql=   "SELECT ".
            "id, ".
            "applied_credit as bp_user_credits, ".
            "UNIX_TIMESTAMP(end_stamp)-UNIX_TIMESTAMP(start_stamp) as original_duration_secs, ".
            "$now - UNIX_TIMESTAMP(start_stamp) as adj_duration_secs, ".
            "start_stamp, ".
            "UNIX_TIMESTAMP(end_stamp) as end_stamp, ".
            "UNIX_TIMESTAMP(end_stamp) - $now as new_duration_secs ".
            "FROM operations.bp_sponsors ".
            "WHERE ".
            "bp_id = $bp_id AND ".
            "company_id = $company_id AND ".
            "user_id = $user_id AND ".
            "UNIX_TIMESTAMP(start_stamp) < $now < UNIX_TIMESTAMP(end_stamp)";
    $dbr = DB::select($sql);
    // If there is a current transaction
    if( isset($dbr[0]) ){
        $bp_was_active=true;
        $bp_user_credits = $dbr[0]->bp_user_credits;
        $adj_cost = $bp_user_credits / $dbr[0]->original_duration_secs * $dbr[0]->adj_duration_secs;
        $refund = $bp_user_credits - $adj_cost;
        $total_credits = $total_credits + $refund;
        $end_stamp = $dbr[0]->end_stamp;
        DB::table('operations.bp_sponsor_transactions_completed')
        ->insert(array(
            'id' => $dbr[0]->id,
            'company_id' => $company_id,
            'bp_id' => $bp_id,
            'user_id' => $user_id,
            'applied_credit' => $bp_user_credits,
            'cost' => $adj_cost,
            'refund' => $refund,
            'start_stamp' => $dbr[0]->start_stamp,
            'end_stamp' => date( 'Y-m-d H:i:s', $now),
        ));
        DB::table('operations.bp_sponsors')->where('id',$dbr[0]->id)->delete();
        $credits_confirmed_value = $credits_confirmed / 604800 * $dbr[0]->new_duration_secs;

    }
    $total_credits = $total_credits - $credits_confirmed_value;
    if($total_credits < 0) {
        if($total_credits < -0.01 && ! $refund) {
            return [
                'status' => 'error',
                'message' => 'Sorry, insufficient credits. Please consider purchasing credits.',
                'log' => "total_credits=$total_credits < -0.01 AND no refund",
            ];
        }
        if($refund){
            if($pre_refund_total_credits < 0.995) {
                return [
                    'status' => 'error',
                    'message' => 'Sorry, insufficient credits. Please consider purchasing credits.',
                    'log' => [  'user_credits' => $total_credits,
                                'bp_user_credits' => $bp_user_credits,
                                'credits_confirmed' => $credits_confirmed,
                                'refund' => $refund,
                                'user_credits' => $total_credits,
                            ],
                ];
            }
            $over_credit = abs($total_credits); // e.g 0.001 POSITIVE
            // One credit is worth 60*60*24*7  = 604800
            $value_of_one_second = 0.000001653; // 1/(60*60*24*7)
            $over_seconds = intval($over_credit / $value_of_one_second) + 1;
            $total_credits=0;
/*
            return [
                'status' => 'error',
                'message' => 'Sorry, insufficient credits. Please consider purchasing credits.',
                'log' => [  'calc' => $total_credits + 0.006 + $refund,
                            'credits_confirmed' => $credits_confirmed,
                            'user_credits' => $total_credits,
                            'over_credit' => $over_credit,
                            'over_seconds' => $over_seconds,
                            'refund' => $refund,
                            'user_credits' => $total_credits,
                        ],
            ];
*/
        }
    }
    $position_new = ($bp_position - $bp_user_credits *10) + $credits_confirmed * 10;
    $one_week = 604800 - $over_seconds;
    $end_stamp_displayed = "None Assigned";
    if($credits_confirmed > 0){
        if($bp_was_active){
            $end_stamp_sql = date( 'Y-m-d H:i:s', $end_stamp );
            $end_stamp_displayed = date( 'd/m/y H:i', $end_stamp );
        } else {
            $end_stamp_sql = date( 'Y-m-d H:i:s', $now + $one_week );
            $end_stamp_displayed = date( 'd/m/y H:i', $now + $one_week );
        }
        $bp_is_active=true;
        DB::table('operations.bp_sponsors')
        ->insert(array(
            'company_id' => $company_id,
            'bp_id' => $bp_id,
            'user_id' => $user_id,
            'applied_credit' => $credits_confirmed,
            'start_stamp' => date( 'Y-m-d H:i:s', $now),
            'end_stamp' => $end_stamp_sql,
        ));
    }
    DB::table('operations.bp_supplier_positions')
    ->where('bp_id', $bp_id)
    ->where('company_id', $company_id)
    ->update(array(
        'bp_position' => $position_new,
    ));
    DB::table('oktick.users')
    ->where('id', $user_id)
    ->update(array(
        'ok_credits' => $total_credits,
    ));
    DB::commit();
    $badge_active=0;
    if ($bp_was_active == false AND $bp_is_active) $badge_active=1;
    if ($bp_was_active AND $bp_is_active == false) $badge_active=-1;
//        if ($bp_was_active == false AND $bp_is_active == false) $badge_active=0;
//        if ($bp_was_active AND $bp_is_active) $badge_active=0;
    $message = $credits_confirmed . " credits were applied.";
    if($pre_refund_total_credits <> $total_credits AND $refund <> ""){
        $message .=<<<EOS
The unused portion of the previous transaction ($bp_user_credits) was returned to your account in the amount of $refund.
previous_transaction_cost=$adj_cost 
current_transaction_cost=$credits_confirmed_value 
credits_confirmed_value=$credits_confirmed_value 
credits_confirmed=$credits_confirmed 
EOS;
    }
    return ['ok_credits' => $total_credits,
            'badge_active' => $badge_active,
            'end_stamp' => $end_stamp_displayed,
            'status' => 'success',
            'log' => '',
            'title' => 'Credit Applied!',
            'message' => $message,
            ];
//        return (new Response('"'.$Message.'" %'.$ok_credits.'%', "200"))->header('Content-Type', "text/html; charset=UTF-8");
//    return true;
    return (new Response('"here is the error"', "402"))->header('Content-Type', "text/html; charset=UTF-8");
//    return (new Response('"'.$Message.'" %'.$ok_credits.'%', "200"))->header('Content-Type', "text/html; charset=UTF-8");
}
function onProductDelete(){
    $bp_id = $this->verifyPost('bp_id',"int");
    return [
        'status' => 'success',
        'message' => 'Product Deleted!',
        'log' => [  'Product ID' => $bp_id,
                ],
        ];
}
?>
==
{% partial "acc-head" cssfile="oktick.css" %}
{% partial "nav-top"%}
<div class="container">
<h2 class="text-center">My Rankings{{"&nbsp;"|raw}}<button id="ok_help_ranking_on" class="help border-none btn btn-default btn-lg {% if user.ok_help_ranking_on==1 %}collapse{%endif%}"><span class="glyphicon-primary glyphicon glyphicon-info-sign"></span></button></h2>
<div class="row">
    <div class="col-xs-1 col-md-0"></div>
    <div class="col-xs-10 col-md-12">
        <div id="ok_help_ranking" {% if user.ok_help_ranking==0 %}class="collapse"{% endif %} >
            <p>{{"&nbsp;&nbsp;&nbsp;"|raw}}</p>
            <p>Below are the products and services we have for your business. If you are new here some of these might be not correct because they were semi-automatically collected. In that case just delete them by pressing the <button class="btn btn-danger btn-xs"><span class="glyphicon glyphicon-remove"></span></button> button. If you want to add products or services you can do that on the <a href="/account/products-services/#add">bottom</a> of the page.</p>
            <p>This page gives you the possibility to elevate the listing position in the search by applying some credit to a product or service. The way this works is simple: When a person searches for your product or service you come up higher in the results listing depending on how many credits are applied. The company with applying more credits gets the higher position. You can puchase credits on the <a href="/account/credit">credits</a> page. The more credits you purchase the more advantageous they are priced. You apply credits to a product or service below by pressing the <button class="btn btn-default btn-xs"><span class="glyphicon glyphicon-plus"></span></button> button. To remove credits applied press the <button class="btn btn-default btn-xs"><span class="glyphicon glyphicon-minus"></span></button> button. Credits are applied continuously until you set the credits to zero. Each week we will send you an email to let you know where your products and services stand.</p>
<!--p>Another feature worth mentioning is the "booster" feature. If you enable this you will be able to achieve a much higher position than you could normally expect for the credit applied. The way it works is that we won't use your credit every time to push you up higher but only some of the time. The times we do use your credit, it will be more valuable for that instance.</p>

<p>An example will help to illustrate this: Lets say you apply one credit for one week using the booster. Instead of using your credit every time to push you up, we will - lets say - use your credit every 10th time to bring you up to the top. What the ratio is depends on the popularity of the item. This is our answer to help small companies to be able to get to the top of the list as well - just not every time.</p-->
            <p>If you don't want to see this each time you get here click below. You can always re-enable it later by clicking on the <button class="btn btn-default btn-sm"><span class="glyphicon-primary glyphicon glyphicon-info-sign"></span></button> sign.</p>
            <div class="text-center">
                <button id="ok_help_ranking_off" class="btn btn-default btn-sm help"><span class="glyphicon glyphicon glyphicon-thumbs-up"></span>&nbsp;Got it!</button>
                <br>
                <br>
            </div>
        </div>
    </div>
    <div class="col-xs-1 col-md-0"></div>
</div> 
<br>
<br>
<div class="row">
    <div class="col-xs-1 col-md-0"></div>
    <div class="col-xs-10 col-md-12">
        <!--h3>Your Products and Services{{"&nbsp;"|raw}}<span style="font-size:18px;" onclick="$('#product-services-info1-plus').hide();$('#product-services-info1').show();$.request('onInfo1On');" id="product-services-info1-plus" class="glyphicon glyphicon-sm glyphicon glyphicon-info-sign {% if user.ok_help_ranking==1 %}collapse{%endif%}"></span></h3-->
        {% if products %}
        <table class="table table-bordered">
            <tr class="">
                <th class="">Products & Services</th>
                <!--th class="text-center">Start<br>Dates</th-->
                <th class="text-center">Current<br>Position</th>
                <th class="text-center">Estimated<br>Position</th>
                <th class="text-center">Renewal<br>Date</th>
                <th class="text-center">Weekly<br>Amount</th>
                <!--th class="text-center"></th-->

                <!--th class="text-center border_only_right"></th-->
            </tr>
            {% for product in products %}
                <tr class="{% if product.bp_user_credits %}success{%endif%}" id="row{{product.bp_id}}">
                    <td class="" 
                        id="bp{{ product.bp_id }}" 
                        data-bp_id="{{ product.bp_id }}"
                        data-bp_user_credits="{% if product.bp_user_credits %}{{product.bp_user_credits}}{%else%}0{%endif%}">
                        {{ product.bp_name }}
                    </td>
                    <td class="text-center"><!-- Current Position -->
                        <div class="form-group input-group col-centered">
                            <label for="current-position{{ product.bp_id }}" class="sr-only" ></label>
                            <input  type="text" 
                                   class="form-control input text-center"
                                    disabled
                                    id="current-position{{ product.bp_id }}"
                                    placeholder="--------"
                                    value= "{% if product.bp_high > 50 %}+50
                                            {%elseif product.bp_high > 25%}Top 50
                                            {%elseif product.bp_high > 20%}Top 25
                                            {%elseif product.bp_high > 15%}Top 20
                                            {%elseif product.bp_high > 10%}Top 15
                                            {%elseif product.bp_high > 5%}Top 10
                                            {%elseif product.bp_high > 3%}Top 5
                                            {%elseif product.bp_high > 0%}Top 3
                                            {%endif%}"
                                    size="6">
                        </div>
                    </td>
                    <td class="text-center"><!-- Estimated Position -->
                        <div class="form-group input-group col-centered">
                            <label for="estimated-position{{ product.bp_id }}" class="sr-only" ></label>
                            <input type="text" class="form-control input text-center" disabled id="estimated-position{{ product.bp_id }}" placeholder="--------" value="" size="6">
                        </div>
                    </td>
                    <td class="text-center"><!-- Expiration  -->
                        <div class="form-group input-group col-centered">
                            <label for="end_stamp{{ product.bp_id }}" class="sr-only" ></label>
                            <input type="text" class="form-control input text-center" disabled id="end_stamp{{ product.bp_id }}" placeholder="None Assigned" value="{% if product.end_stamp %}{{ product.end_stamp|date("d/m/y H:i") }}{%else%}None Assigned{%endif%}" size="18">
                        </div>
                    </td>
                    <td class="text-center form-inline">
                        <div class="input-group" id="ButtonGroupConfirm{{product.bp_id}}">
                            <span class="collapse"></span>
                            <!---MINUS  -->
                            <span class="input-group-btn">
                                <button id="btn-credit-minus{{product.bp_id}}"
                                        type="button" 
                                        class="btn btn-default btn-credit"
                                        {% if not product.bp_user_credits %}disabled="disabled"{%endif%} 
                                        data-type="minus" 
                                        data-bp_id="{{product.bp_id}}">
                                    <span id="glyphicon-minus{{product.bp_id}}" class="glyphicon glyphicon-minus"></span>
                                </button>
                            </span>
                            <!---CREDITS -->
                            <span class="input-group-btn">
                                <input  type="text" 
                                    id="credit{{product.bp_id}}" 
                                    name="credit{{product.bp_id}}" 
                                    class="form-control input input-number text-center" 
                                    value="{% if product.bp_user_credits %}{{product.bp_user_credits}}{%else%}0{%endif%}" 
                                    data-max-minus="0" 
                                    data-max-plus="99" 
                                    size="2" 
                                    style="width:41px;min-width:41px;" 
                                    disabled >
                            </span>
                            <!---PLUS -->
                            <span class="input-group-btn">
                                <button id="btn-credit-plus{{product.bp_id}}" 
                                        type="button" 
                                        class="btn btn-default btn-credit" 
                                        {% if user.ok_credits < 0.995 %}disabled="disabled"{%endif%} 
                                        data-type="plus" 
                                        data-bp_id="{{product.bp_id}}">
                                    <span id="glyphicon-plus{{product.bp_id}}" class="glyphicon glyphicon-plus"></span>
                                </button>
                            </span>
                        </div>
                    </td>
                    <td class="text-center"><!-- Expiration  -->
                        <!---CONFIRM -->
                        <button id="btn-confirm{{product.bp_id}}" 
                                style="visibility:hidden;" 
                                type="button" 
                                class="btn-confirm btn btn-success btn-sm"
                                data-bp_id="{{product.bp_id}}">
                            <span id="glyphicon-confirm{{product.bp_id}}" class="glyphicon glyphicon-ok"></span>
                        </button>
                        <script>if(typeof previous == "undefined"){var previous = {};previous.bp_id=false;}</script>
                    </td>
                </tr>
            {% endfor %}
        </table>
        {% endif %}
    </div>
    <div class="col-xs-1 col-md-0"></div>
</div>
</div><!--/container -->
{% partial "acc-nav-bottom" %}
{% partial "acc-foot" %}