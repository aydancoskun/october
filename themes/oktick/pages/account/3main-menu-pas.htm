title = "Main Menu P & S"
url = "/account/products-services/:activationcode?"
layout = "main"
is_hidden = 0
==
<?php
use Illuminate\Http\Response;

function onInit(){
    /*
/:activationcode?
    */
    $this['activationcode']=$this->param('activationcode');
}

function onStart(){
    $user=Auth::getUser();
    if (! $user ) {
        return redirect("/".$this['activationcode']);
    }
    $now = time();
    $this['pending_products'] = DB::table('operations.bp_suppliers_added')
        ->where('user_id', $user->id)
        ->where('company_uid', $user->ok_company_id)
        ->where('status','Pending verification')
        ->orderBy('created_stamp', 'desc')
        ->get();
    $this['approved_products'] = DB::table('operations.bp_suppliers_added')
        ->where('user_id', $user->id)
        ->where('company_uid', $user->ok_company_id)
        ->where('status','Approved')
        ->orderBy('created_stamp', 'desc')
        ->get();
}

function verifyPost($post_name,$check="int"){
    if( !isset($_POST[$post_name]) ) App::abort(403, 'Forbidden');
    $post_val_raw = post($post_name);
    if($check=="int") $post_val_cast = (int) $post_val_raw;
    if($check=="float") $post_val_cast = (float) $post_val_raw;
    if($check=="string") $post_val_cast = (string) $post_val_raw;
    if( $post_val_raw <> $post_val_cast ) App::abort(403, 'Forbidden');
    return $post_val_cast;
}

function onProductPendingDelete(){
    $user=Auth::getUser();
    if (! $user ) {
        return redirect("/".$this['activationcode']);
    }
    $now = time();
    $uid = $this->verifyPost('uid',"int");

    // EXIT if there is no product
    $sql=   "SELECT * FROM operations.bp_suppliers_added ".
            "WHERE ".
            "uid = $uid AND ".
            "company_uid = $user->ok_company_id AND ".
            "user_id = $user->id ".
            "LIMIT 1";
    $dbr = DB::select($sql);
    if( ! isset($dbr[0]) ){
        return ['status' => 'error','message' => 'Pending product could not be deleted! (err: NP)','log' => [  'err: NP' => $uid,],];
    }

    // EXIT if app in DEVELOPMENT
    if( env("APP_ENV") == "development" OR env("APP_ENV") <> "production" ){
//        return ['status' => 'success','message' => 'Product Deleted in Development mode!','log' => [  'DEV Deleted Product ID' => $uid,],];
    }

    DB::table('operations.bp_suppliers_added')->where('uid',$uid)->delete();

    $this['pending_products'] = DB::table('operations.bp_suppliers_added')
                    ->where('user_id', $user->id)
                    ->where('company_uid', $user->ok_company_id)
                    ->orderBy('created_stamp', 'desc')
                    ->get();

    return ['status' => 'success','message' => 'Pending product deleted!','log' => [  'Pending Product Deleted' => $uid,],];

}

function onProductDelete(){
    $user=Auth::getUser();
    if (! $user ) {
        return redirect("/".$this['activationcode']);
    }
    $now = time();
    $bp_id = $this->verifyPost('bp_id',"int");

    // EXIT if there is money riding on it by anyone
    $sql=   "SELECT count(*) as count ".
            "FROM operations.bp_sponsors ".
            "WHERE ".
            "bp_id = $bp_id AND ".
            "company_id = $user->ok_company_id AND ".
            "UNIX_TIMESTAMP(start_stamp) < $now < UNIX_TIMESTAMP(end_stamp)";
    $dbr = DB::select($sql);
    if( $dbr[0]->count > 0 ){
        return ['status' => 'error','message' => 'Product could not be deleted! (err: CR)','log' => [  'err: CR' => $bp_id,],];
    }

    // EXIT if there is no product
    $sql=   "SELECT ".
            "uid, ".
            "trawling_rule_no, ".
            "company_website_url, ".
            "same_name_flag, ".
            "jump_flag, ".
            "sing, ".
            "prime_uid ".
            "FROM operations.bp_suppliers ".
            "WHERE ".
            "bp_uid = $bp_id AND ".
            "company_uid = $user->ok_company_id ".
            "LIMIT 1";
    $dbr = DB::select($sql);
    if( ! isset($dbr[0]) ){
        return ['status' => 'error','message' => 'Product could not be deleted! (err: NP)','log' => [  'err: NP' => $bp_id,],];
    }

    // EXIT if app in DEVELOPMENT
    if( env("APP_ENV") == "development" OR env("APP_ENV") <> "production" ){
        return ['status' => 'success','message' => 'Product Deleted in Development mode!','log' => [  'DEV Deleted Product ID' => $bp_id,],];
    }

    DB::beginTransaction();

    $uid = $dbr[0]->uid;
    $trawling_rule_no = $dbr[0]->trawling_rule_no;
    $company_website_url = $dbr[0]->company_website_url;
    $same_name_flag = $dbr[0]->same_name_flag;
    $jump_flag = $dbr[0]->jump_flag;
    $sing = $dbr[0]->sing;
    $prime_uid = $dbr[0]->prime_uid;

    DB::table('operations.bp_suppliers_deleted')
        ->insert(array(
            'uid' => $dbr[0]->uid,
            'trawling_rule_no' => $dbr[0]->trawling_rule_no,
            'company_website_url' => $dbr[0]->company_website_url,
            'same_name_flag' => $dbr[0]->same_name_flag,
            'jump_flag' => $dbr[0]->jump_flag,
            'sing' => $dbr[0]->sing,
            'prime_uid' => $dbr[0]->prime_uid,
            'company_uid' => $user->ok_company_id,
            'bp_uid' => $bp_id,
            'user_id' => $user->id,
        ));

    DB::table('operations.bp_suppliers')->where('uid',$dbr[0]->uid)->delete();
    DB::table('operations.bp_supplier_positions')->where(array('bp_id'=>$bp_id,'company_id'=>$user->ok_company_id))->delete();
    $user->ok_company_products_count = $user->ok_company_products_count-1;
    $user->save();
    DB::commit();

    return ['status' => 'success','message' => 'Product Deleted!','log' => [  'Deleted Product ID' => $bp_id,],];
}

function make_company_website_url($url,$proto,$www){
    if( ! $url) return false;
    if(strpos($url,"http")!==false) return $url;
    if(!$proto) $final_url = "http://";
    else $final_url = $proto."://";
    if(!$www) $final_url .= $url;
    else $final_url .= $www.".".$url;
    return $final_url;
}
function onProductAdd(){
    $user=Auth::getUser();
    if (! $user ) {
        return redirect("/".$this['activationcode']);
    }
    $now = time();
    $bp_name = $this->verifyPost('bp_name',"string");
    $bp = DB::table('operations.bps')->where('bp',$bp_name)->first();
    // EXIT if app in DEVELOPMENT

/*
    if( env("APP_ENV") == "development" OR env("APP_ENV") <> "production" ){
        return [
            'status' => 'success',
            'message' => 'DEV: Product added but subject to verification by our research team!',
            'log' => [ 'DEVELOPMENT MODE'=>'','Product Name' => $bp_name,],
        ];
    }
*/

    if( ! $bp){
        try {
            $company = DB::table('operations.companies')->where('uid',$user->ok_company_id)->first();
            DB::table('operations.bp_suppliers_added')
                ->insert(array(
                    'bp_name' => $bp_name,
                    'company_uid' => $user->ok_company_id,
                    'status' => 'Pending verification',
                    'bp_uid' => 0,
                    'user_id' => $user->id,)
                );
        }
        catch(Exception $e) {
            \Debugbar::info("company add new product failed= ".$e->getMessage());
            return [
                'status' => 'error',
                'message' => $e->getMessage(),
                'log' => [ 'Product Name' => $bp_name, 'error'=>$e->getMessage(),],
            ];
        }
        return [
            'status' => 'success',
            'message' => 'New Product added to queue subject to verification by our research team',
            'log' => [ 'Product Name' => $bp_name,],
        ];
    }
    \Debugbar::info($bp);
    try {
        \Debugbar::info("bp= ".$bp->bp_uid);
        DB::table('operations.bp_suppliers_added')
            ->insert(array(
                'bp_name' => $bp->bp,
                'company_uid' => $user->ok_company_id,
                'status' => 'Approved',
                'bp_uid' => $bp->bp_uid,
                'user_id' => $user->id,)
            );
        $company = DB::table('operations.companies')->where('uid',$user->ok_company_id)->first();
        $company_website_url = $this->make_company_website_url($company->company_website_url,$company->company_website_proto,$company->company_website_www);
        if( ! $company_website_url) throw new Exception("No website url for your company");
        $primes = DB::table('operations.primes')->where('prime_uid',$bp->prime_uid)->first();
        
        DB::table('operations.bp_suppliers')
            ->insert(array(
                'trawling_rule_no' => 99,
                'company_website_url' => $company_website_url,
                'same_name_flag' => $bp->same_name_exclam_flag,
                'jump_flag' => 'No',
                'sing' => 'No',
                'prime_uid' => $bp->prime_uid,
                'prime' => $primes->prime,
                'company_uid' => $user->ok_company_id,
                'bp' => $bp_name,
                'bp_uid' => $bp->bp_uid,)
            );
            if($company->company_country = "uk" ) $bp_position = 9; else $bp_position = 8;
        DB::table('operations.bp_supplier_positions')
            ->insert(array(
                'bp_id' => $bp->bp_uid,
                'company_id' => $user->ok_company_id,
                'company_website_url' => $company_website_url,
                'bp_position' => $bp_position,)
            );
        $user->ok_company_products_count = $user->ok_company_products_count+1;
        $user->save();

        return [
                'status' => 'success',
                'message' => 'Product was added',
                'log' => [ 'Product Name' => $bp_name,],
        ];
    }
    catch(Exception $e) {
        \Debugbar::info("co add bp failed= ".$e->getMessage());
        return [
            'status' => 'error',
            'message' => $e->getMessage(),
            'log' => [ 'Product Name' => $bp_name, 'error'=>$e->getMessage(),],
        ];
    }
}
?>
==
{% partial "head" %}
{% partial "nav-top"%}

<div class="container">
<br>
<h2 class="text-center">Products & Services Management<br>
<span class="text-center {% if user.ok_help_productservices %}collapse{% endif %}" id="ok_help_productservices_sign" style="font-size:14px;">(Click here <span id="ok_help_productservices_on" class="help glyphicon-primary glyphicon glyphicon-question-sign"></span> for help)</span>
</h2>
<div class="row">
    <div id="ok_help_productservices" {% if user.ok_help_productservices==0 %}class="collapse"{% endif %} >
        <br>
        <p>{{"&nbsp;&nbsp;&nbsp;"|raw}}</p>
        <p>On this page you can see the list of all products or services we have on record for your business.</p>
        <p>If any are incorrect you can delete them using the delete <button type="button" class="btn btn-delete btn-danger btn-xs"><span class="glyphicon glyphicon-trash"></span></button> button and confirming your choice.</p>
        <p>If you find products or services your business provides are missing from this list, you can add them using the first row. Just enter your item, select your choice from the list and click the <button class="btn btn-success btn-xs"><span class="glyphicon glyphicon-ok"></span></button> button. If you cannot find it on the standard list add it anyway writing it as you normally would. Please note we only accept generic or general designations; trade and service marks are not permitted. Ideally products and services should not be more than three to four words.</p>
        <p>Each products and/or services you propose to add will be shown below your current products in a "Products & Services pending approval" section which appears when you have products pending approval. If you made an error you can delete any pending item. The reason items are not immediately available is because they have to be verified by the OKTicK Team which will be done as quickly as possible depending upon volume of traffic.</p>
        <p>If you don't need this notice any further, click below. You can always re-enable it later by clicking the <span class="glyphicon-primary glyphicon glyphicon-question-sign"></span> sign.</p>
        <div class="text-center">
            <button id="ok_help_productservices_off" class="btn btn-default btn-sm help"><span class="glyphicon glyphicon-primary glyphicon-thumbs-up"></span>&nbsp;Got it!</button>
            <br>
            <br>
        </div>
    </div>
</div>
<br>
<br>
<div class="row">
    <table class="table table-bordered">
        <tr class="">
            <th class="">Add Products & Services</th>
            <th class="col-xs-1 col-md-1 text-center">Add</th>
        </tr>
        <tr>
            <td class="text-center">
                <div class="input-group input-group-lg">
                <label class="sr-only" for="autocomplete-ajax">Enter Keyword (e.g. Tools, Boots, etc)</label>
                <input  class="form-control"
                        type="search"
                        name="q"
                        id="autocomplete-ajax" placeholder="Search..." value="{% if search and search != 404 %}{{ search }}{% endif %}" maxlength="100%" size="100%" onclick="$('#autocomplete-ajax').autocomplete().options.serviceUrl='account/add-products-services';"/>
                </div>
            </td>
            <td class="text-center" style="vertical-align: middle;">
                <button id="btn-add-products-services"
                        type="button"
                        class="btn btn-success btn-sm">
                    <span class="glyphicon glyphicon-ok"></span>
                </button>
            </td>
        </tr>
    </table>
</div>
            
{% if products %}
<div class="row">
        <table class="table table-bordered">
            <tr class="">
                <th class="">Existing Products & Services</th>
                <th class="col-xs-1 col-md-1 text-center">Delete</th>
            </tr>
            {% for product in products %}
                <tr class="{% if product.bp_user_credits %}success{%endif%}" id="row{{product.bp_id}}">
                    <td class=""
                        id="bp{{ product.bp_id }}"
                        data-bp_id="{{ product.bp_id }}"
                        data-bp_user_credits="{% if product.bp_user_credits %}{{product.bp_user_credits}}{%else%}0{%endif%}">
                        {{ product.bp_name }}
                    </td>

                    <td class="text-center">
                        {% if product.bp_user_credits %}
                        <button id="btn-na-products-services{{product.bp_id}}"
                                type="button"
                                class="btn btn-delete btn-default btn-sm"
                                data-toggle="tooltip"
                                data-trigger="hover"
                                data-placement="left"
                                title="Can't delete with credits">
                            <span class="glyphicon glyphicon-ban-circle"></span>
                        </button>
                        <!--button id="btn-na-products-services{{product.bp_id}}"
                                class="btn btn-default btn-lg"
                        type="button"
                            data-toggle="tooltip"
                            data-trigger="hover"
                            data-placement="left"
                            title="Can't delete with credits">
                            <span
                            class="glyphicon-primary glyphicon glyphicon-info-sign">
                            </span>
                        </button-->
                        {%else%}
                        <button id="go-button{{product.bp_id}}"
                                type="button"
                                class="btn btn-delete btn-danger btn-sm"
                                data-bp_id="{{product.bp_id}}">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                        {%endif%}

                    </td>
                </tr>
            {% endfor %}
        </table>
</div>
{% endif %}
{% if pending_products %}
<div class="row">
        {% if products %}
        <table class="table table-bordered">
            <tr class="">
                <th>Products & Services pending approval</th>
                <!--th class="text-center">Status</th-->
                <th class="col-xs-1 col-md-1 text-center">Delete</th>
            </tr>
            {% for pending_product in pending_products %}
                <tr id="PendingRow{{pending_product.uid}}">
                    <td class=""
                        id="pending-bp{{ pending_product.uid }}"
                        data-uid="{{ pending_product.uid }}">
                        {{ pending_product.bp_name }}
                    </td>
                    <!--td>
                        {{ pending_product.status }}
                    </td-->
                    <td class="text-center">
                        <button id="pending-go-button{{pending_product.uid}}"
                                type="button"
                                class="btn btn-delete-pending btn-danger btn-sm"
                                data-uid="{{pending_product.uid}}">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                    </td>
                </tr>
            {% endfor %}
        </table>
        {% endif %}
</div>
{%endif%}
{% if approved_products %}
<div class="row">
        {% if products %}
        <table class="table table-bordered">
            <tr class="">
                <th>Products & Services approved and added</th>
                <th class="col-xs-1 col-md-1 text-center">Approved</th>
            </tr>
            {% for approved_product in approved_products %}
                <tr id="PendingRow{{approved_product.uid}}">
                    <td class=""
                        id="pending-bp{{ approved_product.uid }}"
                        data-uid="{{ approved_product.uid }}">
                        {{ approved_product.bp_name }}
                    </td>
                    <!--td>
                        {{ approved_product.status }}
                    </td-->
                    <td class="text-center">
                        <button id="pending-go-button{{approved_product.uid}}"
                            disabled="disabled"
                            type="button"
                            class="btn btn-success btn-sm">
                            <span class="glyphicon glyphicon-ok"></span>
                        </button>
                    </td>
                </tr>
            {% endfor %}
        </table>
        {% endif %}
</div>
{%endif%}

<!-- page specific javascript goes here-->
<script>
$('#btn-add-products-services').click(function(event){
    event.preventDefault();
    console.log("add-products-services");
    bp_name = $('#autocomplete-ajax').val();
    if ( ! bp_name ) return;
    BootstrapDialog.show({
        title: 'Confirmation',
        message: 'Do you confirm you are a supplier of <strong>'+bp_name+'</strong> and that this is expressly mentioned on your website?<br><br>Our research team will shortly review to ensure it complies with OKTicK policies.',
        type: BootstrapDialog.TYPE_PRIMARY,
        size: BootstrapDialog.SIZE_SMALL,
        buttons: [{
            label: 'Yes',
            //icon: 'glyphicon glyphicon-remove',
            cssClass: 'btn-primary',
            action: function(dialog) {
                $.request('onProductAdd', {
                    data: {
                        bp_name: bp_name,
                    }
                })
                .always(function( data, textStatus, errorThrown ) {
                    if(data.status=="error"){
                        console.log(data.log);
                        dialog.close();
                        return;
                    }
                    if(data.status=="success"){
                        console.log(data.log);
                        dialog.close();
                        location.reload(true);
                        return;
                    }
                    dialog.close();
                });
            }
        }, {
            label: 'No',
            action: function(dialog) {
                dialog.close();
            }
        }]
    });
});
$('.btn-delete').click(function(event){
    var types = [BootstrapDialog.TYPE_DEFAULT,
                     BootstrapDialog.TYPE_INFO,
                     BootstrapDialog.TYPE_PRIMARY,
                     BootstrapDialog.TYPE_SUCCESS,
                     BootstrapDialog.TYPE_WARNING,
                     BootstrapDialog.TYPE_DANGER];
    event.preventDefault();
    bp_id = $(this).attr('data-bp_id');
    var bp_name = $('#bp'+bp_id).text();
    BootstrapDialog.show({
        title: 'WARNING - Product Deletion!',
        message: 'Are you sure you want to permanently delete "'+bp_name.trim()+'"?',
        type: BootstrapDialog.TYPE_DANGER,
        size: BootstrapDialog.SIZE_SMALL,
        buttons: [{
            label: 'Yes',
            //icon: 'glyphicon glyphicon-remove',
            cssClass: 'btn-danger',
            action: function(dialog) {
                $.request('onProductDelete', {
                    data: {
                        bp_id: bp_id,
                    }
                })
                .always(function( data, textStatus, errorThrown ) {
                    if(data.status=="error"){
                        console.log(data.log);
                        dialog.close();
                        return;
                    }
                    if(data.status=="success"){
                        $('#row'+bp_id).hide();
                        var badge_total = $("#badge_total").html() - 1;
                        $("#badge_total").html(badge_total);
                        if(badge_total == 0) {
                            $( '#badge_total' ).removeClass('badge-primary');
                            $( '#badge_total' ).removeClass('badge-success');
                            $( '#badge_total' ).removeClass('badge-danger');
                            $( '#badge_total' ).removeClass('badge-warning');
                            $( '#badge_total' ).addClass('badge-default');
                        }
                        $("#badge_total").html(badge_total);
                        console.log(data.log);
                        dialog.close();
                        return;
                    }
                    dialog.close();
                });
            }
        }, {
            label: 'No',
            action: function(dialog) {
                dialog.close();
            }
        }]
    });
});
$('.btn-delete-pending').click(function(event){
    var types = [BootstrapDialog.TYPE_DEFAULT,
                     BootstrapDialog.TYPE_INFO,
                     BootstrapDialog.TYPE_PRIMARY,
                     BootstrapDialog.TYPE_SUCCESS,
                     BootstrapDialog.TYPE_WARNING,
                     BootstrapDialog.TYPE_DANGER];
    event.preventDefault();
    uid = $(this).attr('data-uid');
    var bp_name = $('#bp'+uid).text();
    $.request('onProductPendingDelete', {
        data: {
            uid: uid,
        }
    })
    .always(function( data, textStatus, errorThrown ) {
        if(data.status=="error"){
            console.log(data.log);
            return;
        }
        if(data.status=="success"){
            $('#PendingRow'+uid).hide();
            console.log(data.log);
            return;
        }
    });
});
</script>

</div><!--/container -->
{% partial "nav-bottom" %}
{% partial "foot" %}