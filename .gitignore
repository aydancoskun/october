# An optional prefix ! which negates the pattern; any matching file excluded by a previous pattern will become included again. If a negated pattern matches, this will override lower precedence patterns sources.

# If the pattern ends with a slash, it matches only a directory but no regular files or symbolic links. In other words, foo/ will match a directory foo and paths underneath it.

# Patterns which contain slashes are taken to be relative to the directory containing the .gitignore file. So, a leading slash would indicates that the ignore entry is only to be valid with respect to the directory in which the .gitignore file resides. E.g. specifying *.php would ignore all .php files in this directory and all subdirs, while /*.php would just ignore them in that dir, while again, /foo/*.php would only ignore them in /foo/*.php. The only time you need to put a leading slash is when there isn't one in the path already.

# If the pattern does not contain a slash, git checks for a match against the pathname downwards from the location of the .gitignore file or the toplevel of the tree if not from a .gitignore file.

# Wildcards in the pattern will not match a / in the pathname. For example, Documentation/*.html matches Documentation/git.html but not Documentation/ppc/ppc.html or tools/perf/Documentation/perf.html.

# You can use wildcards and negations like so:
# lib/model/om/*      # ignore everything in the directory
# !lib/model/om/foo   # except foo

/bootstrap/compiled.php
/vendor
/storage
/eml
/api/database/templates_c
/api/piwik/tmp/sessions
/stats
composer.lock
composer.phar
.DS_Store
.htpasswd
.htaccess
nginx-error.log
nginx-access.log
nginx-ssl.access.log
nginx-ssl.error.log
php-errors.log
sftp-config.json
selenium.php
.env
access_log
error_log
php.log
